正则表达式的方法：
test():  正则表达式的方法，返回值是ture/false
exec():  正则表达式的方法，返回值是一个匹配的数组，把匹配出来的结果放到一个数组里，
         直到匹配不成功，如果匹配不成功会返回null，匹配结束，返回值是一个数组。

字符串的方法：
match(): 字符串的方法，返回值是一个数组，匹配符合条件的文本放在数组里，如果匹配不到     
         返回值是null。
         这个方法是不是全局查找有很大区别：
         1：如果不是全局查找，只执行一次匹配，然后结束；
           这个方法返回值除了常规的数组元素之外，返回的数组还含有两个对象属性。
           index 属性声明的是匹配文本的起始字符在 stringObject 中的位置，
           input 属性声明的是对 stringObject 的引用。
         2：如果是全局查找，则匹配字符串中所有符合的字符，如果匹配到了符合条件的结果，
            返回结果是一个数组；如果没有匹配到符合条件的结果，返回值是null。
         注意：这里全局查找下返回的数组与非全局查找下返回的数组有区别：
             它的数组元素中存放的是 strObj 中所有的匹配子串，
             而且也没有 index 属性或 input 属性。

replace（）:字符串的方法
          有两种：第一种：strObj.replace(regObj,replaceStr)
                  第二种：strObj.replace(regObj,function(){})
                          把replace方法的第二个参数传入一个function，这个function会在
                          每次匹配替换的时候调用，算是个每次替换的回调函数，我们使用了
                          回调函数的第一个参数，也就是匹配内容，其实回调函数一共有四个参数
                            1.第一个参数很简单，是匹配字符串
                            2.第二个参数是正则表达式分组内容，没有分组则没有该参数
                            3.第三个参数是匹配项在字符串中的index
                            4.第四个参数则是原字符串

split():字符串的方法 -- strObj.split(regObj)   把字符串分割为字符数组。








